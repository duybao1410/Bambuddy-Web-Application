<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Set Password</title>
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Be+Vietnam+Pro:wght@400;500;600;700&display=swap"/>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css">
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="/css/auth.css">
  <!-- Password Validation -->
  <script src="/js/passwordValidation.js"></script>
    
  </head>
  <body class="light set-password-page">
  <div class="set-password-container">
    <div class="set-password-header">
      <h1 class="set-password-main-title">Bambuddy</h1>
      <h2 class="set-password-subtitle">Set Your Password</h2>
    </div>
    <div class="set-password-content">
      <form id="setPasswordForm" class="set-password-form">
        <div class="form-group">
          <label class="form-label">New Password</label>
          <div class="password-field-container">
            <input type="password" id="newPassword" class="form-control" placeholder="Enter your new password" required>
            <button type="button" class="password-toggle" onclick="togglePassword('newPassword', 'newPasswordToggle')" id="newPasswordToggle">
              <i class="bi bi-eye"></i>
            </button>
          </div>
        </div>
        <div class="form-group">
          <label class="form-label">Confirm Password</label>
          <div class="password-field-container">
            <input type="password" id="confirmPassword" class="form-control" placeholder="Confirm your new password" required>
            <button type="button" class="password-toggle" onclick="togglePassword('confirmPassword', 'confirmPasswordToggle')" id="confirmPasswordToggle">
              <i class="bi bi-eye"></i>
            </button>
          </div>
        </div>
        <button type="submit" class="set-password-btn">Save Password</button>
      </form>
    </div>
  </div>
  <script>
    // Notification system
    function showNotification(message, type = 'info') {
      // Remove existing notifications
      const existingNotifications = document.querySelectorAll('.notification');
      existingNotifications.forEach(notification => notification.remove());

      // Create new notification
      const notification = document.createElement('div');
      notification.className = `notification ${type}`;
      notification.textContent = message;
      document.body.appendChild(notification);

      // Show notification
      setTimeout(() => {
        notification.classList.add('show');
      }, 100);

      // Hide notification after 5 seconds
      setTimeout(() => {
        notification.classList.remove('show');
        setTimeout(() => {
          notification.remove();
        }, 300);
      }, 5000);
    }

    // Smooth password toggle
    function togglePassword(inputId, buttonId) {
      const input = document.getElementById(inputId);
      const button = document.getElementById(buttonId);
      const icon = button.querySelector('i');
      
      if (input.type === 'password') {
        input.type = 'text';
        icon.className = 'bi bi-eye-slash';
        button.classList.add('active');
      } else {
        input.type = 'password';
        icon.className = 'bi bi-eye';
        button.classList.remove('active');
      }
    }

    // Setup password field event listeners
    function setupPasswordFields() {
      const passwordFields = ['newPassword', 'confirmPassword'];
      
      passwordFields.forEach(fieldId => {
        const input = document.getElementById(fieldId);
        const button = document.getElementById(fieldId + 'Toggle');
        
        if (input && button) {
          // Remove any existing event listeners first
          input.removeEventListener('focus', showEyeIcon);
          input.removeEventListener('input', handleInput);
          input.removeEventListener('blur', hideEyeIcon);
          
          // Show eye icon on focus or when typing
          input.addEventListener('focus', showEyeIcon);
          input.addEventListener('input', handleInput);
          input.addEventListener('blur', hideEyeIcon);
          
          function showEyeIcon() {
            button.style.display = 'block';
          }
          
          function handleInput() {
            if (input.value.length > 0) {
              button.style.display = 'block';
            } else {
              button.style.display = 'none';
            }
          }
          
          function hideEyeIcon() {
            if (input.value.length === 0) {
              button.style.display = 'none';
            }
          }
        }
      });
    }

    // Initialize password fields when page loads
    document.addEventListener('DOMContentLoaded', setupPasswordFields);

    document.querySelector("#setPasswordForm").addEventListener("submit", async (e) => {
      e.preventDefault();

      const newPassword = document.querySelector("#newPassword").value;
      const confirmPassword = document.querySelector("#confirmPassword").value;

      // Clear previous errors
      clearPasswordErrors();
      
      // Validate password strength
      const passwordValidation = validatePassword(newPassword);
      if (!passwordValidation.isValid) {
        showPasswordErrors(passwordValidation.errors);
        return;
      }

      if (newPassword !== confirmPassword) {
        showNotification("Passwords do not match!", "error");
        return;
      }

      try {
        const res = await fetch("/auth/set-password", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ newPassword })
        });
        const data = await res.json();
        if (data.success) {
          showNotification("Password set successfully!", "success");
          setTimeout(() => {
            window.location.href = "/auth/token";
          }, 2000);
        } else {
          showNotification(data.message || "Failed to set password", "error");
        }
      } catch (err) {
        showNotification("Error: " + err.message, "error");
      }
    });
  </script>
</body>
</html>
