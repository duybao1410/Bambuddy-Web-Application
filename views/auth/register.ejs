<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Register</title>
  <!-- Google Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Be+Vietnam+Pro:wght@400;500;600;700&display=swap"/>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
  <!-- Tailwind -->
  <script src="https://cdn.tailwindcss.com"></script>
  <!-- Custom CSS -->
  <link rel="stylesheet" href="/css/style.css" />
    <link rel="stylesheet" href="/css/theme.css" />
  <link rel="stylesheet" href="/css/auth.css" />
  <!-- Axios -->
  <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
  <!-- Password Validation -->
  <script src="/js/passwordValidation.js"></script>
  <!-- reCAPTCHA v3 -->
  <script src="https://www.google.com/recaptcha/api.js?render=6Lcij64rAAAAAICAzZK7HDHuxAUE-VQLAsZ7Wyky"></script>
    
  </head>
  <body class="light">
<div class="container-fluid">
  <div class="row min-vh-100">
    <div class="col-md-6 d-flex justify-content-center align-items-center">
      <div class="auth-left-inner text-center">
        <h2 class="brand-title brand-title-light">Bambuddy</h2>
        <p class="brand-subtitle">The road to <br> authentic tourism <br> experiences</p>
        <img src="/img/AccountPage.png" alt="Tourism" class="rounded shadow">
      </div>
    </div>
    <div class="col-md-6 d-flex justify-content-center align-items-center bg-white">
      <div class="auth-card w-100">
        <h3 class="auth-title">Sign Up</h3>
        <form id="signupForm" action="/auth/register" method="POST">
          <div class="row mb-3">
            <div class="col">
              <label class="form-label">First Name</label>
              <input type="text" id="firstName" class="form-control" placeholder="Your first name" required>
            </div>
            <div class="col">
              <label class="form-label">Last Name</label>
              <input type="text" id="lastName" class="form-control" placeholder="Your last name" required>
            </div>
          </div>
          <div class="mb-3">
            <label class="form-label">Role</label>
            <div>
              <div class="form-check">
                <input class="form-check-input" type="radio" name="role" id="regular" value="user" checked>
                <label class="form-check-label" for="regular">Regular User</label>
              </div>
              <div class="form-check">
                <input class="form-check-input" type="radio" name="role" id="guide" value="tourguide">
                <label class="form-check-label" for="guide">Tour Guide</label>
              </div>
            </div>
          </div>
          <div class="mb-3">
            <label class="form-label">Email</label>
            <input type="email" id="email" class="form-control" placeholder="Your email" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Password</label>
            <div class="position-relative">
              <input type="password" id="password" class="form-control" placeholder="********" required>
              <button type="button" class="btn btn-link position-absolute end-0 top-50 translate-middle-y pe-3 text-muted password-toggle-btn" onclick="togglePassword('password', 'passwordToggle')" id="passwordToggle">
                <i class="bi bi-eye"></i>
              </button>
            </div>
          </div>
          <div class="mb-3">
            <label class="form-label">Confirm Password</label>
            <div class="position-relative">
              <input type="password" id="confirmPassword" class="form-control" placeholder="********" required>
              <button type="button" class="btn btn-link position-absolute end-0 top-50 translate-middle-y pe-3 text-muted password-toggle-btn" onclick="togglePassword('confirmPassword', 'confirmPasswordToggle')" id="confirmPasswordToggle">
                <i class="bi bi-eye"></i>
              </button>
            </div>
          </div>
          <button type="submit" class="btn auth-btn w-100">Sign Up</button>
        </form>
        <div class="divider mt-3">
          <hr class="flex-grow-1">
          <span class="divider-text">Or sign up with</span>
          <hr class="flex-grow-1">
        </div>
        <div class="d-flex justify-content-center mb-3">
          <button class="btn btn-light border rounded-circle p-2 google-btn" onclick="window.location.href='/auth/google'">
            <img src="https://developers.google.com/identity/images/g-logo.png" alt="Google">
          </button>
        </div>

        <p class="auth-footer">
          You already have an account? <a href="/auth/login" class="signin-link">Sign In</a>
        </p>
      </div>
    </div>
  </div>
</div>

<script>
// Notification system
function showNotification(message, type = 'info') {
  // Remove existing notifications
  const existingNotifications = document.querySelectorAll('.notification');
  existingNotifications.forEach(notification => notification.remove());

  // Create new notification
  const notification = document.createElement('div');
  notification.className = `notification ${type}`;
  notification.textContent = message;
  document.body.appendChild(notification);

  // Show notification
  setTimeout(() => {
    notification.classList.add('show');
  }, 100);

  // Hide notification after 5 seconds
  setTimeout(() => {
    notification.classList.remove('show');
    setTimeout(() => {
      notification.remove();
    }, 300);
  }, 5000);
}

// Smooth password toggle
function togglePassword(inputId, buttonId) {
  const input = document.getElementById(inputId);
  const button = document.getElementById(buttonId);
  const icon = button.querySelector('i');
  
  if (input.type === 'password') {
    input.type = 'text';
    icon.className = 'bi bi-eye-slash';
    button.classList.remove('text-muted');
    button.classList.add('text-primary');
  } else {
    input.type = 'password';
    icon.className = 'bi bi-eye';
    button.classList.remove('text-primary');
    button.classList.add('text-muted');
  }
}

// Setup password field event listeners
function setupPasswordFields() {
  const passwordFields = ['password', 'confirmPassword'];
  
  passwordFields.forEach(fieldId => {
    const input = document.getElementById(fieldId);
    const button = document.getElementById(fieldId + 'Toggle');
    
    if (input && button) {
      // Remove any existing event listeners first
      input.removeEventListener('focus', showEyeIcon);
      input.removeEventListener('input', handleInput);
      input.removeEventListener('blur', hideEyeIcon);
      
      // Show eye icon on focus or when typing
      input.addEventListener('focus', showEyeIcon);
      input.addEventListener('input', handleInput);
      input.addEventListener('blur', hideEyeIcon);
      
      function showEyeIcon() {
        button.style.display = 'block';
      }
      
      function handleInput() {
        if (input.value.length > 0) {
          button.style.display = 'block';
        } else {
          button.style.display = 'none';
        }
      }
      
      function hideEyeIcon() {
        if (input.value.length === 0) {
          button.style.display = 'none';
        }
      }
    }
  });
}

// Initialize password fields when page loads
document.addEventListener('DOMContentLoaded', setupPasswordFields);

document.querySelector("#signupForm").addEventListener("submit", async (e) => {
  e.preventDefault();
  const password = document.querySelector("#password").value;
  const confirmPassword = document.querySelector("#confirmPassword").value;
  
  // Clear previous errors
  clearPasswordErrors();
  
  // Validate password strength
  const passwordValidation = validatePassword(password);
  if (!passwordValidation.isValid) {
    showPasswordErrors(passwordValidation.errors);
    return;
  }
  
  if (password !== confirmPassword) {
    showNotification("Passwords do not match!", "error");
    return;
  }
  
  grecaptcha.execute("6Lcij64rAAAAAICAzZK7HDHuxAUE-VQLAsZ7Wyky", {action: "register"}).then(async function(token) {
    const data = {
      firstName: document.querySelector("#firstName").value,
      lastName: document.querySelector("#lastName").value,
      email: document.querySelector("#email").value,
      password,
      role: document.querySelector("input[name='role']:checked").value,
      "g-recaptcha-response": token 
    };
    try {
      const res = await axios.post("/auth/register", data);
      if (res.data.success) {
        showNotification("Signup successful! Redirecting...", "success");
        setTimeout(() => {
          window.location.href = "/auth/token";
        }, 2000);
      } else {
        showNotification(res.data.message, "error");
      }
    } catch (err) {
      console.error(err);
      showNotification(err.response?.data?.message || "Signup failed", "error");
    }
  });
});
</script>
</body>
</html>
